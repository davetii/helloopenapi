openapi: 3.0.0
info:
  description: Hello API
  version: "1.0.0"
  title: Hello API
  contact:
    email: davetii@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: http://localhost:8080/api
    description: Local Server

paths:
  /v1/hello:
    parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
    get:
      summary: say hello
      operationId: sayHello
      responses:
        '200':
          description: hello
          content:
            text/plain:
              schema:
                type: string
                example: hello

  /v1/person:
    get:
      summary: get person
      operationId: getAllPersons
      responses:
        '200':
          description: Return Person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        '404':
          description: Not Found

    post:
      summary: Add Person
      operationId: createPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Already exists
        '404':
          description: Not Found
        '400':
          description: Invalid request
    put:
      summary: Update Person
      operationId: updatePerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Person Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Already exists
        '404':
          description: Not Found

  /v1/person/{name}:
    parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string

    get:
      summary: get person
      operationId: readPerson
      responses:
        '200':
          description: Return Person
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        '404':
          description: Not Found
    delete:
      summary: delete Person
      operationId: deletePerson
      responses:
        '204':
          description: Delete Person
        '404':
          description: Not Found

    
components:
  parameters:
    namePathParam:
      in: path
      description: Name Parameter
      name: name
      required: true
      schema:
        type: string

  schemas:
    Person:
        type: object
        description: A person
        properties:
          name:
            type: string
          role:
            type: string
